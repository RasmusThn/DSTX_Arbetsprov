@page "/fetchdata"

<PageTitle>All Data</PageTitle>

<h1>All Data</h1>

@if (timeReportList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th><button @onclick="SortById">Id</button></th>
                <th><button @onclick="SortByDate">Date</button></th>
                <th><button @onclick="SortByHour">Hours</button></th>
                <th><button @onclick="SortByWorkplaceId">WorkplaceId</button></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var timeReport in timeReportList)
            {
                <tr>
                    <td>@timeReport.Id</td>
                    <td>@timeReport.Date.ToShortDateString()</td>
                    <td>@timeReport.Hours</td>
                    <td>@timeReport.WorkplaceId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ITimeReportService reportService;
    private List<TimeReport> timeReportList;
    private List<Workplace> workplaces;
    private bool sortByDateAscending = true;
    private bool sortByTemperatureCAscending = true;
    private bool sortByTemperatureFAscending = true;
    private bool sortBySummaryAscending = true;

    protected override async Task OnInitializedAsync()
    {
        reportService = new TimeReportService();
        timeReportList = await reportService.GetAllTimeReports();
        workplaces = await reportService.GetAllWorkplacesAsync();
    }

    #region Sorting
    private void SortByDate()
    {
        if (sortByDateAscending)
        {
            timeReportList = timeReportList.OrderBy(f => f.Date).ToList();
        }
        else
        {
            timeReportList = timeReportList.OrderByDescending(f => f.Date).ToList();
        }
        sortByDateAscending = !sortByDateAscending;
    }

    private void SortByHour()
    {
        if (sortByTemperatureCAscending)
        {
            timeReportList = timeReportList.OrderBy(f => f.Hours).ToList();
        }
        else
        {
            timeReportList = timeReportList.OrderByDescending(f => f.Hours).ToList();
        }
        sortByTemperatureCAscending = !sortByTemperatureCAscending;
    }

    private void SortByWorkplaceId()
    {
        if (sortByTemperatureFAscending)
        {
            timeReportList = timeReportList.OrderBy(f => f.WorkplaceId).ToList();
        }
        else
        {
            timeReportList = timeReportList.OrderByDescending(f => f.WorkplaceId).ToList();
        }
        sortByTemperatureFAscending = !sortByTemperatureFAscending;
    }

    private void SortById()
    {
        if (sortBySummaryAscending)
        {
            timeReportList = timeReportList.OrderBy(f => f.Id).ToList();
        }
        else
        {
            timeReportList = timeReportList.OrderByDescending(f => f.Id).ToList();
        }
        sortBySummaryAscending = !sortBySummaryAscending;
    }
    #endregion
}
